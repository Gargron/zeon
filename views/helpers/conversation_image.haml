%a.framed_image_holder.fih_600{ :href => @c.image.url }
  %img.framed_image{ :src => @c.image.url(:medium) }

%ul.item_utils
  %li
    %div.item_image_info
      %dl
        %dt Likes:
        %dd
          = @c.meta["like_count"]
          &bull;
          = haml :"helpers/like"
      - if source = @c.meta.fetch("source_url", false) and not source.empty?
        %dl
          %dt Source:
          %dd
            %a.tt{ :href => source, :title => source }= ellipse_url(source, 15)
      %dl
        %dt Size:
        %dd= make_bytes(@c.image.size)
      %dl
        %dt Dimensions:
        %dd= @c.image_dimensions + " (" + megapixels(@c.image_dimensions).to_s + " MP)"
  %li.item_content
    - if session? and @cur_user.id == @c.user.id
      %div.item_controls
        %a.boxed{ :href => "/edit/#{@c.id.to_s}" } Edit
        %form.no_form{ :action => "/activity/#{@c.id.to_s}/delete", :method => "post" }
          %button.boxed.delete{ :type => "submit" } Delete
    - if (content = @c.content) and not content.empty?
      %div.format~ markdownit content
    %div.item_meta
      %a.tt{ :href => "/user/" + @c.user.name, :title => (@c.user.blob['real_name'] || nil) }
        %img.avatar{ :src => @c.user.avatar(48), :width => "48", :height => "48" }
        %span.name= @c.user.name
      %span.time= ago(@c.created_at)